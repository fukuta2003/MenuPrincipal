<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictNao.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAABHVJREFUWEe9
        Vt1vVEUU94mkCakRCZE/wRgfkNDIYqispYAofTAYgo0UbKItGImJKSY+WH0gERPig5qQ8EL0iSefeEIe
        tF/EDxTJZgXa7dfu/VjClvoRsJ3j+Z07M53Ze3fbNcGT/Hrmzpw5v9+cOfduHyG2paUlOPGAUkqe4c2a
        GZs1E1s/btVEgDE3oetha1lbiyHWzWErcLu/k4pdm6mQ3/TQUOzaRLf2bKYbR3aIAJgVUNz1uAQ8TID8
        2s4NdLljva2EvYJCxgaDQn4jFYGMtUxwrOxx5kD+iyYHYL6ABgSYnzmxnwrPb1ibCJBz7MzbvEfHC3k+
        Ib/ybLutABq6qQDMzQ0fk/XFS19T4bl2I0JlICHnmMVLX8meueE3JMevfP+G3Agw1lAAnmc/6NWrid37
        5jwIVGYl8hsVyBHj2s1Thz3yNVUA45mhV/SKbwsXv1CFTqnEyuk5nufUwsXPdVRiIInuVGni+IHMCjTs
        gZl3D+jZTFO1C2eEsNiFPUJO1Qtnki+UNiQvl8sUxzGF1YiuvtmdEgDLFDB5eCvRH3f1SsqEKDz3kSrk
        2wU8tvOw5eVlIQ+CQASUp36nkZ6nPAGrXsGtQ1uI/l7Uq55ZouCzIYE2mUfSSqViySvTk/TdS0+2dgVG
        xO3XthE9+EtHeAayeqTIg7kSfd/ztEeeqgAGsHoBRsTkke0s9b7ErGYeeXmWRl7dkiI3AoyJAMARkLzT
        2mN+6thORUqEeifWXsDkSpOrMJhXo70dSpOrOtgKAFlX4AowIlRp8AXuLq6Zb/IMYm46FsAdX55XY307
        QCJkhtSFqYAIwB9YEwECvGrRuQ9TAjQ5RCiU/rezp9TlretcUnNyg9auAB4VmH7vZcR7AsIwVOZ1gwBU
        IApjNTGw362ACyvA8K52BTJfOrnXEMMLmFyXHcQWSQ/EIY3355v2AEwE4FWoq4CFkA/w3fsHx8nthyYL
        uIowrNBYX07IQOrCCIA1fA3xnHT/P/bUiIuiSMhBUmEhAMZMLBVwRKiwMk+jvdtSIjwBWRXAePJ1ef+9
        o7vkUa1GP77fJ8AYhK4AhjRlMM/fg4P+98AToL0nYOpojuj+n5g2ApBMGg4+ulNTPw0P8B23CXjMv3o1
        iQGxEaBFqGC2RKMHn8kWkHUF04PdPLOMaRGAk6Dh4EF07fRJTtLGDYVTrYcI4jkIo2ClEuIhAP0wfrQz
        W0CjKyi9AxFKVatVnJyT8cmjGl0/O8SE64RYJxQhPKeufzqk4qiGWHsFYRSq8f5dQpopQHtPAP6Hu8n/
        Jf88uFd+y5Eojheo8OXHIAK5TbYCESExiJVqVWOaeOtFjxxoWgEh736CRrYngRMnerjJ7lLx/CfEXzgh
        cpP5YBEcg1jsucp768kBT4DpAY88lwSZ4LFDHZy4ja5kJEuBYxArexrEpwQAEADy0dxjqY2NEjVDsz1Y
        Mwe3PQDysdyj/4msZXS0rwgwgxvH99G3fPr/Az/07xZOmK1AK2aurX5sGhoe5o7NmolNPNG/G7LAFNWg
        cI4AAAAASUVORK5CYII=
</value>
  </data>
</root>